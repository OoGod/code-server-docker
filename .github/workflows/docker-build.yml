name: Check and Build Code-Server Image

on:
  schedule:
    - cron: '0 0 * * *'  # 每天 UTC 时间凌晨 12 点检查更新
  workflow_dispatch:  # 手动触发
  push:
    branches:
      - main  # 如果仓库代码有更新，将自动触发

jobs:
  check-and-build:
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}  # 从 GitHub Secrets 中读取 Docker 用户名
      DOCKER_IMAGE_NAME: "code-server-python"  # 镜像名称
      DOCKER_TAG: "latest"  # 镜像标签

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # 获取最新的 code-server 镜像 digest
      - name: Get latest code-server image digest from Docker Hub
        id: get_digest
        run: |
          LATEST_DIGEST=$(curl -s https://registry.hub.docker.com/v2/repositories/codercom/code-server/tags/latest | jq -r '.images[0].digest')
          echo "LATEST_DIGEST=$LATEST_DIGEST" >> $GITHUB_ENV

      # 获取当前 Git 提交号
      - name: Get current Git commit hash
        id: get_commit
        run: |
          COMMIT_HASH=$(git rev-parse HEAD)
          echo "COMMIT_HASH=$COMMIT_HASH" >> $GITHUB_ENV

      # 创建 digests 文件夹并下载之前构建时的 digest 和 commit hash
      - name: Download last build digest and commit hash
        id: download_info
        run: |
          mkdir -p digests
          # 使用 actions/download-artifact 下载 artifact
          echo "Downloading last digest and commit hash..."
          curl -sL "$GITHUB_API_URL/repos/${GITHUB_REPOSITORY}/actions/artifacts" | jq -r '.artifacts[] | select(.name=="code-server-digest-and-commit") | .archive_download_url' | xargs -I {} curl -L -o digests/code-server-digest-and-commit.zip {}
          
          # 解压 artifact 中的文件
          unzip digests/code-server-digest-and-commit.zip -d digests || echo "No previous digest found or commit hash."

      # 检查 digest 和 commit hash 是否发生变化
      - name: Check if image or code has been updated
        id: check_update
        run: |
          # 读取上次的 digest 和 commit hash
          if [ -f digests/last_digest.txt ]; then
            LAST_DIGEST=$(cat digests/last_digest.txt)
          else
            LAST_DIGEST=""
          fi
          
          if [ -f digests/last_commit.txt ]; then
            LAST_COMMIT=$(cat digests/last_commit.txt)
          else
            LAST_COMMIT=""
          fi
          
          # 判断是否有更新
          if [ "$LAST_DIGEST" != "$LATEST_DIGEST" ] || [ "$LAST_COMMIT" != "$COMMIT_HASH" ]; then
            echo "New image or code detected."
          else
            echo "No updates."
            exit 0
          fi

      # 登录到 Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 构建并推送 Docker 镜像
      - name: Build and Push Docker image
        run: |
          docker build -t $DOCKER_USERNAME/$DOCKER_IMAGE_NAME:$DOCKER_TAG .
          docker push $DOCKER_USERNAME/$DOCKER_IMAGE_NAME:$DOCKER_TAG

      # 保存新生成的 digest 和 commit hash 到文件，并上传作为 artifact
      - name: Save new digest and commit hash as artifact
        run: |
          # 保存当前的 digest 和 commit hash
          echo "$LATEST_DIGEST" > digests/last_digest.txt
          echo "$COMMIT_HASH" > digests/last_commit.txt

      # 上传生成的文件作为 artifact，确保数据可以在工作流结束后下载
      - name: Upload digest and commit hash as artifact
        uses: actions/upload-artifact@v3
        with:
          name: code-server-digest-and-commit
          path: |
            digests/last_digest.txt
            digests/last_commit.txt
